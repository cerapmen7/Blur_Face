import numpy as np
import cv2

#------------------------------------------------------Parameter-------------------------------------------------------#
cap = cv2.VideoCapture(0)
codec=cv2.VideoWriter_fourcc(*'mp4v')
fps = (30)
out = cv2.VideoWriter('output.mp4', codec, fps, (1920,1080))


face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades +'haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier(cv2.data.haarcascades +'haarcascade_eye.xml')
font=cv2.FONT_HERSHEY_DUPLEX

#-------------------------------------------------------Camera---------------------------------------------------------#
while True:
    ret, frame = cap.read()
    cap.set(cv2.CAP_PROP_FPS, fps)
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1920)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1080)

    print("FPS:", cap.get(cv2.CAP_PROP_FPS))


    cv2.resize(frame, (640, 480))
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, 1.3, 3)

# ------------------------------------------------Face Detection-------------------------------------------------------#
    for (x, y, w, h) in faces:

        cv2.rectangle(frame, (x, y), (x + w, y + h), (255, 0, 0), 2)
        cv2.putText(frame, "Face", (x, y - 10), font, 1, (255, 0, 0), 2)



        roi = frame[y:y + h, x:x + w]
        pixel_effect = cv2.resize(roi,(w // 20,h // 20))
        pixel_effect2 = cv2.resize(pixel_effect, (w,h))
        frame[y:y + h, x:x + w] = pixel_effect2


    cv2.imshow('camera', frame)
    out.write(frame)


    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

#-------------------------------------------------------End------------------------------------------------------------#
cap.release()
out.release()
cv2.destroyAllWindows()
